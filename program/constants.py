#use for testnet
from dydx3.constants import API_HOST_SEPOLIA, API_HOST_MAINNET
from decouple import config

#!!!! SELECT MODE!!!!
MODE = "TESTNET"

#Close all open positions and orders
ABORT_ALL_POSITIONS = False

#Find Cointegrated Pairs
FIND_COINTEGRATED = True

# Manage Exits
MANAGE_EXITS = True

# Place Trades
PLACE_TRADES = True

#Resolution
RESOLUTION = "1HOUR"

#Stats Window
WINDOW = 21

#Thresholds - Opening
MAX_HALF_LIFE = 24
ZSCORE_THRESH = 1.5

USD_MIN_COLLATERAL = 1880  

# Example value
USD_PER_TRADE = 16

#Thresholds - Closing
CLOSE_AT_ZSCORE_CROSS = True

#Ether Adrdress
ETHEREUM_ADDRESS = "0xeA5783c2F7f41FAE070fEfCBba20d9779Ef53837"

#Wallet Private Key
ETH_PRIVATE_KEY = config("ETH_PRIVATE_KEY")

#KEYS - TESTNET
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

#KEYS - MAINET
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")

#KEYS - Export
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

#Host - Export
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_SEPOLIA

#HTTP Providers
HTTP_PROVIDER_TESTNET= "https://eth-sepolia.g.alchemy.com/v2/jDRcki8xrnCC4IF7Q9PZXZNIKuAbeLp_"

HTTP_PROVIDER_MAINNET= "https://eth-mainnet.g.alchemy.com/v2/fA-Li6cq_7sNwvuYbRlZ2r29iCKxeKYt"

HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET
